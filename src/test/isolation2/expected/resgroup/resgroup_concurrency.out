-- create a resource group when gp_resource_manager is queue
0:CREATE RESOURCE GROUP rg_concurrency_test WITH (concurrency=2, cpu_rate_limit=.02, memory_limit=.02);
CREATE
0:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|0          |0           |0         |0           
(1 row)

-- test1: test gp_toolkit.gp_resgroup_status and pg_stat_activity
-- no query has been assigned to the this group
1:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|0          |0           |0         |0           
(1 row)
1:CREATE role role_concurrency_test RESOURCE GROUP rg_concurrency_test;
CREATE
2:SET role role_concurrency_test;
SET
2:BEGIN;
BEGIN
3:SET role role_concurrency_test;
SET
3:BEGIN;
BEGIN
4:SET role role_concurrency_test;
SET
4&:BEGIN;  <waiting ...>
-- new transaction will be blocked when the concurrency limit of the resource group is reached.
1:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|2          |1           |1         |2           
(1 row)
1:SELECT waiting_reason, rsgqueueduration > '0'::interval as time from pg_stat_activity where current_query = 'BEGIN;' and rsgname = 'rg_concurrency_test';
waiting_reason|time
--------------+----
resgroup      |t   
(1 row)
2:END;
END
3:END;
END
4<:  <... completed>
BEGIN
4:END;
END
1:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|0          |0           |1         |3           
(1 row)
1:DROP role role_concurrency_test;
DROP
1:DROP RESOURCE GROUP rg_concurrency_test;
DROP

-- test2: test alter concurrency
-- Create a resource group with concurrency=2. Prepare 2 running transactions and 1 queueing transactions.
-- Alter concurrency 2->3, the queueing transaction will be woken up, the 'value' and 'proposed' of pg_resgroupcapability will be set to 3.
11:CREATE RESOURCE GROUP rg_concurrency_test WITH (concurrency=2, cpu_rate_limit=.02, memory_limit=.02);
CREATE
11:CREATE role role_concurrency_test RESOURCE GROUP rg_concurrency_test;
CREATE
12:SET role role_concurrency_test;
SET
12:BEGIN;
BEGIN
13:SET role role_concurrency_test;
SET
13:BEGIN;
BEGIN
14:SET role role_concurrency_test;
SET
14&:BEGIN;  <waiting ...>
11:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|2          |1           |1         |2           
(1 row)
11:SELECT concurrency,proposed_concurrency FROM gp_toolkit.gp_resgroup_config WHERE groupname='rg_concurrency_test';
concurrency|proposed_concurrency
-----------+--------------------
2          |2                   
(1 row)
11:ALTER RESOURCE GROUP rg_concurrency_test SET CONCURRENCY 3;
ALTER
11:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|3          |0           |1         |3           
(1 row)
11:SELECT concurrency,proposed_concurrency FROM gp_toolkit.gp_resgroup_config WHERE groupname='rg_concurrency_test';
concurrency|proposed_concurrency
-----------+--------------------
3          |3                   
(1 row)
12:END;
END
13:END;
END
14<:  <... completed>
BEGIN
14:END;
END
11:DROP role role_concurrency_test;
DROP
11:DROP RESOURCE GROUP rg_concurrency_test;
DROP

-- test3: test alter concurrency
-- Create a resource group with concurrency=3. Prepare 3 running transactions, and 1 queueing transaction.
21:CREATE RESOURCE GROUP rg_concurrency_test WITH (concurrency=3, cpu_rate_limit=.02, memory_limit=.02);
CREATE
21:CREATE role role_concurrency_test RESOURCE GROUP rg_concurrency_test;
CREATE
22:SET role role_concurrency_test;
SET
22:BEGIN;
BEGIN
23:SET role role_concurrency_test;
SET
23:BEGIN;
BEGIN
24:SET role role_concurrency_test;
SET
24:BEGIN;
BEGIN
25:SET role role_concurrency_test;
SET
25&:BEGIN;  <waiting ...>
21:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|3          |1           |1         |3           
(1 row)
21:SELECT concurrency,proposed_concurrency FROM gp_toolkit.gp_resgroup_config WHERE groupname='rg_concurrency_test';
concurrency|proposed_concurrency
-----------+--------------------
3          |3                   
(1 row)
-- Alter concurrency 3->2, the 'proposed' of pg_resgroupcapability will be set to 2.
21:ALTER RESOURCE GROUP rg_concurrency_test SET CONCURRENCY 2;
ALTER
21:SELECT concurrency,proposed_concurrency FROM gp_toolkit.gp_resgroup_config WHERE groupname='rg_concurrency_test';
concurrency|proposed_concurrency
-----------+--------------------
3          |2                   
(1 row)
-- When one transaction is finished, queueing transaction won't be woken up. There're 2 running transactions and 1 queueing transaction.
24:END;
END
21:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|2          |1           |1         |3           
(1 row)
-- New transaction will be queued, there're 2 running and 2 queueing transactions.
24&:BEGIN;  <waiting ...>
21:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|2          |2           |2         |3           
(1 row)
-- Finish another transaction, one queueing transaction will be woken up, there're 2 running transactions and 1 queueing transaction.
22:END;
END
21:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|2          |1           |2         |4           
(1 row)
-- Alter concurrency 2->2, the 'value' and 'proposed' of pg_resgroupcapability will be set to 2.
21:ALTER RESOURCE GROUP rg_concurrency_test SET CONCURRENCY 2;
ALTER
21:SELECT concurrency,proposed_concurrency FROM gp_toolkit.gp_resgroup_config WHERE groupname='rg_concurrency_test';
concurrency|proposed_concurrency
-----------+--------------------
2          |2                   
(1 row)
-- Finish another transaction, one queueing transaction will be woken up, there're 2 running transactions and 0 queueing transaction.
23:END;
END
21:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|2          |0           |2         |5           
(1 row)
24<:  <... completed>
BEGIN
25<:  <... completed>
BEGIN
25:END;
END
24:END;
END
21:DROP role role_concurrency_test;
DROP
21:DROP RESOURCE GROUP rg_concurrency_test;
DROP

-- test4: concurrently drop resource group

31:CREATE RESOURCE GROUP rg_concurrency_test WITH (concurrency=2, cpu_rate_limit=.02, memory_limit=.02);
CREATE
31:CREATE ROLE role_concurrency_test RESOURCE GROUP rg_concurrency_test;
CREATE

-- DROP should fail if there're running transactions
32:SET ROLE role_concurrency_test;
SET
32:BEGIN;
BEGIN
31:BEGIN;
BEGIN
31:DROP ROLE role_concurrency_test;
DROP
31:DROP RESOURCE GROUP rg_concurrency_test;
ERROR:  Cannot drop resource group "rg_concurrency_test"
HINT:   The resource group is currently managing 1 query(ies) and cannot be dropped.
	Terminate the queries first or try dropping the group later.
	The view pg_stat_activity tracks the queries managed by resource groups.
31:END;
END
32:END;
END
32:RESET ROLE;
RESET

-- DROP is abortted
31:BEGIN;
BEGIN
31:DROP ROLE role_concurrency_test;
DROP
31:DROP RESOURCE GROUP rg_concurrency_test;
DROP
31:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname|num_running|num_queueing|num_queued|num_executed
-------+-----------+------------+----------+------------
(0 rows)
32:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|0          |0           |0         |2           
(1 row)
32:SET ROLE role_concurrency_test;
SET
32&:BEGIN;  <waiting ...>
31:ABORT;
ABORT
32<:  <... completed>
BEGIN
32:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|1          |0           |0         |3           
(1 row)
32:END;
END
32:RESET ROLE;
RESET

-- DROP is committed
31:BEGIN;
BEGIN
31:DROP ROLE role_concurrency_test;
DROP
31:DROP RESOURCE GROUP rg_concurrency_test;
DROP
31:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname|num_running|num_queueing|num_queued|num_executed
-------+-----------+------------+----------+------------
(0 rows)
32:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname            |num_running|num_queueing|num_queued|num_executed
-------------------+-----------+------------+----------+------------
rg_concurrency_test|0          |0           |0         |4           
(1 row)
32:SET ROLE role_concurrency_test;
SET
32&:BEGIN;  <waiting ...>
31:END;
END
32<:  <... completed>
ERROR:  Resource group 197234 was concurrently dropped
33:SELECT r.rsgname, num_running, num_queueing, num_queued, num_executed FROM gp_toolkit.gp_resgroup_status s, pg_resgroup r WHERE s.groupid=r.oid AND r.rsgname='rg_concurrency_test';
rsgname|num_running|num_queueing|num_queued|num_executed
-------+-----------+------------+----------+------------
(0 rows)

